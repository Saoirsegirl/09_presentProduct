Estimate My Diamond
========================================================
author: Barbara Dornseif - Saoirsegirl
date: May 23, 2015

Why Do I Need An Estimator?
========================================================
US diamond purchases toped $600 millions in value in 2013
```{r echo=FALSE}
purchases <- c(75, 15, 5, 5)
```  
The top occassions for a Diamond purchases are:  
- Wedding Rings - `r round(purchases[1], 0)` % 
- Anniversaries - `r round(purchases[2], 0)` % 
- Birth of a Baby - `r round(purchases[3], 0)` % 
- All Other Occassions - `r round(purchases[4], 0)` % 

Choosing the 4 C's
========================================================
- Diamond buyers need a model to help pick the right stone.  

- Keep it simple and it will drive additional sales to your site.  
 
- Just 4 inputs give a range of possibilities for every budget.  

$$
    \beta_0 + \beta_1(carat) + \beta_2(cut) + \beta_3(color) + \beta_4(clarity)
$$ 

- Our model fills in the $\beta$ 's the customer fills in the C's  

<small>Cut and Clarity capture 95+% of the price variation represented by: depth%, table%, and the 3 co-ordinates of table, crown and height. Given new (and even some seasoned) buyers will be less likely to know of or have experience with these specifications, it is better to "keep it simple".</small>

Model SnapShot
========================================================
left:60%
```{r echo=FALSE}
library(ggplot2); library(stats)
Dia <- subset(diamonds, subset = carat < 2.7, select = c(carat:clarity, price))
fitDia_Nglm <- glm(price ~ carat + as.numeric(cut) + as.numeric(color) + 
                       as.numeric(clarity), data = Dia)
model <- fitDia_Nglm$coefficients
myDiamond <- c(1, 4, 4, 4)
estimate <- sum(model[2:5] * myDiamond) + model[1] 
data4Hist <- subset(Dia, subset = (carat == myDiamond[1]), select = price)
histPlot <- hist(data4Hist[,1], 
                 main = 'Price Spread For the Carat Size You Choose',
                 xlab = 'Diamond Price Spread For the Carat Size',
                 col = 'light yellow')
                 abline(v = estimate, col = "red", lwd = 3)
```
***
- A correlation of the other 3 C's is provided with the estimate  
- Future models will have all 4 C's incorporated in the graphical display. so the graph shows only the reference that meet all 4 criteria.

Model Accuracy for Cut
========================================================

```{r plot2, echo=FALSE, fig.width=15}
library(ggplot2); library(stats)
Dia <- subset(diamonds, subset = carat < 2.7, select = c(carat:clarity, price))
fitDia_Nglm <- glm(price ~ carat + as.numeric(cut) + as.numeric(color) + 
                       as.numeric(clarity), data = Dia)
resXY_Nglm <- data.frame(Price = Dia$price, Res = fitDia_Nglm$residuals)
resLoess_Nglm <- loess(Res ~ Price, data = resXY_Nglm, )
resPredict_Nglm <- predict(resLoess_Nglm)
i <- order(as.vector(resXY_Nglm$Price))

plot(resXY_Nglm, col = as.numeric(Dia$cut), main = "Residuals by Cut Quality")
legend("bottomleft", legend = 1:5, pch = 19, col = 1:5)
abline(h = 0, lwd = "2")
lines(resXY_Nglm$Price[i], resPredict_Nglm[i], col='red', lwd = 2)
```  

Cut Values: 1 -- Fair > Good > Very Good > Premium > Ideal -- 5  
<small>The model is most accurate around the $4,000 mark - underestimating smaller gems and over estimating larger ones. This chart also shows over estimations of more expensive gems. Not a bad place to start a sales negotiation.
